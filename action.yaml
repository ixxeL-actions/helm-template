---
name: Helm-template
description: Templating helm charts.
author: ixxeL
inputs:
    chart-name:
        description: The chart name
        required: true
    output-file:
        description: output the template to a file
        required: false
        default: result.yaml
    display:
        description: display or not the result yaml
        required: false
        default: 'true'
    values-file:
        description: values.yaml file used.
        required: false
        default: values.yaml
    working-dir:
        description: file to scan
        required: false
        default: ./chart/mongodb

runs:
    using: composite
    steps:
        - id: helm-template
          run: |
              set +e
              echo -e "${BLUE}[ STEP - Helm-chart templating ] > Templating Helm chart.${BLANK}"
              echo -e "${CYAN}[ INFO ] > Helm version.${BLANK}"
              helm version --short
              echo -e "${YELLOW}[ EXECUTING ] > Templating helm chart ${{ inputs.working-dir }}.${BLANK}"

              if [[ -d ${{ inputs.working-dir }} ]]
              then
                echo -e "${GREEN}[ CHECK SUCCESS ] > Directory exists, proceeding templating.${BLANK}"
              else
                echo -e "${RED}[ CHECK ERROR ] > Directory doesn't exist, canceling templating.${BLANK}"
                exit 1
              fi

              echo -e "${CYAN}[ INFO ] > The helm chart ${{ inputs.chart-name }} will be templated.${BLANK}"
              helm template ${{ inputs.chart-name }} ${{ inputs.working-dir }} --values="${{ inputs.working-dir }}/${{ inputs.values-file }}" > ${{ inputs.output-file }}
              if [[ $? = 0 ]]
              then
                TPL_CHART_YAML=$(pwd)/${{ inputs.output-file }}
                echo ::set-output name=TPL_CHART_YAML::"${TPL_CHART_YAML}"
                echo -e "${GREEN}[ CHECK SUCCESS ] > Helm templating succeeded without any error.${BLANK}"
              else
                echo -e "${RED}[ CHECK ERROR ] > Helm templating didn't succeed !${BLANK}"
                exit 1
              fi

              if [[ "${{ inputs.display }}" = "true" ]]
              then
                echo -e "${CYAN}[ INFO ] > Displaying templated result.${BLANK}"
                cat ${{ inputs.output-file }} | yq e -C
              else
                echo -e "${CYAN}[ INFO ] > Result not displayed.${BLANK}"
              fi
          shell: bash
          env:
              RED: \033[1;31m
              GREEN: \033[1;32m
              YELLOW: \033[1;33m
              BLUE: \033[1;34m
              PURPLE: \033[1;35m
              CYAN: \033[1;36m
              BLANK: \033[0m
